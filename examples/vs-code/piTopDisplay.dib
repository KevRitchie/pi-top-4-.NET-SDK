#!markdown

# Hello we will be building things

#!csharp

#!connect signalr --kernel-name piTop --hub-url http://pitop-diego.ngrok.io/kernelhub

#!csharp

#!piTop
#r "nuget:piTop"
#r "nuget:piTop.FoundationKit"
#r "nuget:SixLabors.Fonts,1.0.0-beta0010"

#!csharp

#!piTop
using PiTop;
using PiTopMakerArchitecture.Foundation;
using PiTopMakerArchitecture.Foundation.Components;
using PiTopMakerArchitecture.Foundation.Sensors;

using SixLabors.ImageSharp;
using SixLabors.ImageSharp.Drawing;
using SixLabors.ImageSharp.Drawing.Processing;
using SixLabors.Fonts;

#!csharp

#!piTop
var module = new PiTopModule();
var plate = module.GetOrCreatePlate<FoundationPlate>();

#!csharp

#!piTop
var builtinDisplay = module.Display;

#!csharp

#!piTop
var font =  SystemFonts.Collection.Find("Roboto").CreateFont(10);
module.Display.Draw((context) => {
                        context.Clear(Color.Black);
                        var rect = TextMeasurer.Measure("Diego was here", new RendererOptions(font));
                        var x = (module.Display.Width - rect.Width) / 2;
                        var y = (module.Display.Height + (rect.Height)) / 2;
                        context.DrawText("Hello\nWorld",font, Color.White, new PointF(0,0));
                    });

#!csharp

#!piTop
display(builtinDisplay, "text/html");

#!csharp

#!piTop
 module.Display.Draw(d =>
            {
                d.Clear(Color.Black);
                var square = new RectangularPolygon( 0,  0,  module.Display.Width/2,  module.Display.Height/2);
     
                d.Fill(Color.White, square);
            });

#!csharp

#!piTop
module.Dispose();
